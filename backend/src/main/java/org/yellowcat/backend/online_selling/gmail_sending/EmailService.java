package org.yellowcat.backend.online_selling.gmail_sending;

import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;
import org.yellowcat.backend.online_selling.productwaitlist.ProductWaitlistItem;
import org.yellowcat.backend.online_selling.productwaitlist.ProductWaitlistRequest;
import org.yellowcat.backend.product.productvariant.ProductVariant;

import lombok.RequiredArgsConstructor;

import java.util.List;

@Service
@RequiredArgsConstructor
public class EmailService {

    private final JavaMailSender mailSender;

    public void sendProductAvailableNotification(ProductWaitlistRequest request, List<ProductWaitlistItem> availableItems) {
        StringBuilder sb = new StringBuilder();
        sb.append("Xin ch√†o ").append(request.getFullName()).append(",\n\n");
        sb.append("M·ªôt s·ªë s·∫£n ph·∫©m trong y√™u c·∫ßu ch·ªù h√†ng c·ªßa b·∫°n ƒë√£ c√≥ s·∫µn:\n");

        for (ProductWaitlistItem item : availableItems) {
            var variant = item.getProductVariant();
            sb.append("- ").append(variant.getProduct().getProductName())
                    .append(" (C√≤n l·∫°i: ").append(variant.getQuantityInStock())
                    .append(", B·∫°n c·∫ßn: ").append(item.getDesiredQuantity())
                    .append(")\n");
        }

        sb.append("\nVui l√≤ng truy c·∫≠p ƒë·ªÉ ƒë·∫∑t h√†ng s·ªõm tr∆∞·ªõc khi h·∫øt h√†ng.\nC·∫£m ∆°n b·∫°n!");

        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(request.getEmail());
        message.setSubject("S·∫£n ph·∫©m trong danh s√°ch ch·ªù ƒë√£ c√≥ h√†ng!");
        message.setText(sb.toString());

        mailSender.send(message);
    }


    public void sendStatusUpdateNotification(ProductWaitlistRequest request, String messageTitle, String messageBody) {
        String email = request.getEmail();
        if (email == null || email.isEmpty()) {
            throw new IllegalArgumentException("Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
        }

        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(email);
        message.setSubject(messageTitle);

        message.setText("Xin ch√†o " + request.getFullName() + ",\n\n"
                + messageBody + "\n\n"
                + "M√£ theo d√µi y√™u c·∫ßu c·ªßa b·∫°n l√†: " + request.getCode() + "\n\n"
                + "Tr√¢n tr·ªçng,\nYellowCat Team");

        mailSender.send(message);
    }

    public void sendCancellationNotification(ProductWaitlistRequest request) {
        sendStatusUpdateNotification(
                request,
                "‚ùå Phi·∫øu ch·ªù c·ªßa b·∫°n ƒë√£ b·ªã hu·ª∑",
                "R·∫•t ti·∫øc, phi·∫øu y√™u c·∫ßu s·∫£n ph·∫©m b·∫°n ƒë√£ g·ª≠i ƒë√£ b·ªã hu·ª∑ do kh√¥ng ƒë·ªß h√†ng t·ªìn kho ho·∫∑c qu√° h·∫°n x·ª≠ l√Ω trong 3 ng√†y.\n"
                        + "N·∫øu b·∫°n v·∫´n quan t√¢m ƒë·∫øn s·∫£n ph·∫©m, h√£y ƒëƒÉng k√Ω l·∫°i ho·∫∑c li√™n h·ªá v·ªõi ch√∫ng t√¥i."
        );
    }

    public void sendManualUpdateNotification(ProductWaitlistRequest request, String newStatus) {
        sendStatusUpdateNotification(
                request,
                "üîÑ C·∫≠p nh·∫≠t tr·∫°ng th√°i phi·∫øu ch·ªù",
                "Tr·∫°ng th√°i c·ªßa phi·∫øu ch·ªù c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t sang: *" + newStatus + "*.\n"
                        + "Vui l√≤ng ki·ªÉm tra l·∫°i chi ti·∫øt tr√™n h·ªá th·ªëng ƒë·ªÉ bi·∫øt th√™m th√¥ng tin."
        );
    }

}
